---
# - name: 'iquippo-build-creation'
- hosts: "{{ HOST }}"
  become: true
  become_user: "{{ become_user }}"
  become_method: su
  gather_facts: true
  
  tasks:
    - stat:
        path: "{{ app_path }}/{{ app_dir }}"
      register: exist

    - name: create "{{ app_path }}/{{ app_dir }}" directory
      file: dest={{ app_path }}/{{ app_dir }} state=directory 
      #owner=www-data group=www-data mode=0700
      when: exist.stat.exists != True

    - git: 
        repo: "{{ project_git_repo }}"
        dest: "{{ app_path }}/{{ app_dir }}"
        version: "{{ GIT_TAG }}"
        refspec: '+refs/heads/{{ GIT_TAG }}:refs/remotes/origin/{{ GIT_TAG }}'
        accept_hostkey: yes
        update: yes
        force: true
      #become: true
      #become_user: www-data
      #become_method: su
      when: build_type  == "build" 
      register: cloned

    - stat:
        path: "{{ app_path }}/{{ app_dir }}/.git/deploy_info.txt"
      register: deploy_exist

    - name: Find out revert info
      slurp:
        src: "{{ app_path }}/{{ app_dir }}/.git/deploy_info.txt"
      when: deploy_exist.stat.islnk is defined
      register: deploy_info

    - name: Reverting Changes
      command: "git reset --hard {{ deploy_info.content | b64decode }}"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}"
      when: 
        - build_type  == "revert"
        - deploy_exist.stat.islnk is defined
         
    - name: Execute the npm install 
      command: npm install
      ignore_errors: true
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: npm_install

    - name: Execute the bower install 
      command: "bower install"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: bower_install

    - name: Installing depedencies locally
      command: "npm install --save-dev --save-exact {{ item }}"
      with_items:
        - "ionic@latest"
        - "@ionic/cli-plugin-gulp@latest"
        - "@ionic/cli-plugin-ionic1@latest"
        - "@ionic/cli-plugin-cordova@latest"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 

    - name: Updating platform
      command: "/usr/local/lib/node_modules/ionic/bin/ionic platform update android"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      become: true
      become_user: "{{ become_user }}"

    - name: Create the build 
      command: "ionic cordova build android --interactive --prod --release --verbose"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: ionic_build
      become: true
      become_user: "{{ become_user }}"

    - name: Signing APK
      command: " apksigner sign --ks  {{ keystore }} --ks-pass pass:{{ keystore_pass }} --key-pass pass:{{ key_pass }}   android-release-unsigned.apk"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}/platforms/android/build/outputs/apk"


    - name: Minimizing APK 
      command: "zipalign -v {{ version_number }} android-release-unsigned.apk {{ app_name }}"  
      args:
        chdir: "{{ app_path }}/{{ app_dir }}/platforms/android/build/outputs/apk"

    - name: Deleting Existing apk from workspace
      command: "sudo rm -rf {{ job_home }}/platforms"
      become: true
      become_user: root
      become_method: su

    - name: Moving newly build apk to workspace
      command: "sudo mv platforms {{ job_home }}"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}"
      become: true
      become_user: root
      become_method: su

    - name: Print complete log list
      command: git log --pretty=oneline "{{ cloned.after }}..{{ cloned.before }}"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}"
      when: 
        - build_type  == "build" 
      register: commits_list

    - name: Ensure Deployment file exist
      copy:
        content: ""
        dest: "{{ app_path }}/{{ app_dir }}/.git/deploy_info.txt"
        force: yes
        mode: 0666
      when: 
        - build_type  == "build" 
        

    - name: Save Deployment Info
      lineinfile:
        dest: "{{ app_path }}/{{ app_dir }}/.git/deploy_info.txt"
        line: "{{ item.line }}"
      with_items:
        - {line: '{{ cloned.before }}'}
      when: 
        - build_type  == "build" 
        


    - mail:
        host: smtp.gmail.com
        port: 465
        username: atul.agrawal@varaunited.com
        password: Atul@9911
        from: Atul Agrawal <atul.agrawal@varaunited.com>
        to: Atul Agrawal <atul.agrawal@varaunited.com>
        subject: Deployment Status
        body: 'Your deployment has been successfully done.Commits Deployed List<p>{{ commits_list.stdout_lines }}</p>'
      when: 
        - build_type  == "build" 
      delegate_to: "{{ HOST }}"

    - mail:
        host: smtp.gmail.com
        port: 465
        username: atul.agrawal@varaunited.com
        password: Atul@9911
        from: Atul Agrawal <atul.agrawal@varaunited.com>
        to: Atul Agrawal <atul.agrawal@varaunited.com>
        subject: Deployment Status
        body: 'Your changes has been reverted'
      when: 
        - build_type  == "revert" 
      delegate_to: "{{ HOST }}"

    - debug: msg="{{ commits_list.stdout_lines }}"
      when: 
        - build_type  == "build"
    - debug: msg="{{ GIT_TAG }}"
      when: 
        - build_type  == "build"
    - debug: msg="{{ cloned }}"
      when: 
        - build_type  == "build"
    - debug: msg="{{ commits_list }}"
      when: 
        - build_type  == "build"
    - debug: msg="{{ npm_install.stdout }}"
    - debug: msg="{{ npm_install.stderr }}"
    - debug: msg="{{ bower_install.stdout }}"
    - debug: msg="{{ bower_install.stderr }}"
        







         
        
  