---
# - name: 'iquippo-build-creation'
- hosts: "{{ HOST }}"
  become: true
  become_user: "{{ user }}"
  become_method: su
  gather_facts: true
  vars:
    app_path: /home/varanet
    app_dir: iquippo.com 
    server_dir: server
    timeout: 120s
  
  tasks:
    - stat:
        path: "{{ app_path }}/{{ app_dir }}"
      register: exist

    - name: create "{{ app_path }}/{{ app_dir }}" directory
      file: dest={{ app_path }}/{{ app_dir }} state=directory 
      #owner=www-data group=www-data mode=0700
      when: exist.stat.exists != True

    - git: 
        repo: http://atul:Atul9911@199.217.116.19/iquippo/iquippo.com.git
        dest: "{{ app_path }}/{{ app_dir }}"
        version: "{{ GIT_TAG }}"
        refspec: '+refs/heads/{{ GIT_TAG }}:refs/remotes/origin/{{ GIT_TAG }}'
        update: yes
        force: true
      #become: true
      #become_user: www-data
      #become_method: su
      register: cloned 
          
    - name: Execute the npm install 
      command: npm install
      ignore_errors: true
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: npm_install
      become: true
      become_user: "{{ user }}"
      become_method: su

    - name: Execute the bower install 
      command: "bower install"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: bower_install
      become: true
      become_user: "{{ user }}"
      become_method: su

    - name: Create the build 
      command: "grunt build"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}" 
      register: grunt_build
      become: true
      become_user: "{{ user }}"
      become_method: su



#- hosts: "{{ dbserver }}"
#  tasks : 
#    -name: Create application db

    - name: start application with pm2 
      command: "pm2 start ecosystem.config.js"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}/{{ server_dir }}" 
      register: pm2_restart
      become: true
      become_user: "{{ user }}"
      become_method: su


    - name: Print complete log list
      command: git log --pretty=oneline "{{ cloned.after }}..{{ cloned.before }}"
      args:
        chdir: "{{ app_path }}/{{ app_dir }}"
      register: commits_list
  
    - mail:
        host: smtp.gmail.com
        port: 465
        username: atul.agrawal@varaunited.com
        password: Atul@9911
        from: Atul Agrawal <atul.agrawal@varaunited.com>
        to: Atul Agrawal <atul.agrawal@varaunited.com>
        subject: Deployment Status
        body: 'Your deployment has been successfully done.Commits Deployed List<p>{{ commits_list.stdout_lines }}</p>'
      delegate_to: "{{ HOST }}"

    - debug: msg="{{ commits_list.stdout_lines }}"
    - debug: msg="{{ GIT_TAG }}"
    - debug: msg="{{ cloned }}"
    - debug: msg="{{ commits_list }}"
    - debug: msg="{{ npm_install.stdout }}"
    - debug: msg="{{ npm_install.stderr }}"
    - debug: msg="{{ bower_install.stdout }}"
    - debug: msg="{{ bower_install.stderr }}"
    - debug: msg="{{ pm2_restart.stdout }}"
        







         
        
  